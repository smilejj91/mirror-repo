<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.7">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BUSINESSNAME</name>
          <description>사업장 이름을 입력하세요. (ex. mois)</description>
          <defaultValue>please-type-business-name</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.FileParameterDefinition>
          <name>diff.csv</name>
          <description>사업 관리 서버에서 받은 csv 파일 업로드
※ &quot;비교대상 2&quot;에 대한 패키지를 다운받음
※ unstable repository는 바라보지 않으며, 오직 stable repository만 바라보게 되어있음</description>
        </hudson.model.FileParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.10.3">
          <name>NODE</name>
          <description>빌드 완료 후 작업공간에서 최신 작업에 대한 패키지 다운로드 가능
- after.txt 파일에서 다운로드 못 받은 패키지 리스트 확인 가능</description>
          <allowedSlaves>
            <string>slave1</string>
            <string>slave2</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>slave1</string>
            <string>slave2</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

#set -x

# .csv format : package-name,A-version,A-maintainer,B-version,B-maintainer

BEFORE=&quot;before&quot;
AFTER=&quot;after&quot;

cat &gt;/etc/apt/sources.list.d/temp.list&lt;&lt;EOF
deb http://deb.debian.org/debian bullseye main contrib non-free
deb http://deb.debian.org/debian bullseye-updates main contrib non-free
deb http://security.debian.org/debian-security bullseye-security main contrib non-free
deb http://update.gooroom.kr/gooroom gooroom-3.0 main
deb http://tos-repo.tmaxos.com/tmax tmaxgooroom-3.0-stable main
deb http://tos-repo.tmaxos.com/tmax tmaxgooroom-3.0-updates main
deb http://b2b-repo.tmaxos.net/tmax tmaxgooroom-${BUSINESSNAME}-stable main
EOF

cat &gt;/etc/apt/preferences.d/temp.pref&lt;&lt;EOF
Package: *
Pin: release a=tmaxgooroom-${BUSINESSNAME}-stable
Pin-Priority: 1002

Package: *
Pin: release a=tmaxgooroom-3.0-updates
Pin-Priority: 1001

Package: *
Pin: release a=tmaxgooroom-3.0-stable
Pin-Priority: 1001

Package: *
Pin: release o=Gooroom
Pin-Priority: 900

Package: *
Pin: release o=Debian
Pin-Priority: 500

Package: linux-image*
Pin: release o=Debian
Pin-Priority: -1

Package: linux-image*
Pin: release o=Gooroom
Pin-Priority: -1
EOF

apt-get update

while read line || [ -n &quot;$line&quot; ]; do
  PACKAGE_NAME=`echo &quot;$line&quot; | cut -d &apos;,&apos; -f 1`
  A_VERSION=`echo &quot;$line&quot; | cut -d &apos;,&apos; -f 2`
  B_VERSION=`echo &quot;$line&quot; | cut -d &apos;,&apos; -f 4`

  if [ ! -z ${A_VERSION} ]; then
    echo &quot;${PACKAGE_NAME}=${A_VERSION}&quot; &gt;&gt; ${BEFORE}.txt
  fi
  
  if [ ! -z ${B_VERSION} ]; then
    DISTRIBUTION=`apt show &quot;${PACKAGE_NAME}=${B_VERSION}&quot; | grep APT-Sources | awk &apos;{print $3}&apos;`
    if [ ! -z ${DISTRIBUTION} ]; then
      echo &quot;${PACKAGE_NAME}=${B_VERSION}&quot; &gt;&gt; ${AFTER}.txt
      
      mkdir -p ${DISTRIBUTION}
      apt-get -qq download ${PACKAGE_NAME}=${B_VERSION}
      rename &apos;s/%3a/:/g&apos; *
      mv *.deb ${DISTRIBUTION}
    else
      echo &quot;#${PACKAGE_NAME}=${B_VERSION} # cannot find package&quot; &gt;&gt; ${AFTER}.txt
    fi     
  fi 
done &lt; diff.csv

rm /etc/apt/sources.list.d/temp.list
rm /etc/apt/preference.d/temp.pref
apt-get update</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.40">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@1.0.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>