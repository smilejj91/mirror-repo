<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.7">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>3</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@2.6.0">
          <name>DISTRIBUTION</name>
          <randomName>choice-parameter-3002032321636664</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1131.v8b_b_5eda_c328e">
              <script>import hudson.util.RemotingDiagnostics
import jenkins.model.Jenkins
 
String agent_name = &apos;repo&apos;
//groovy script you want executed on an agent
groovy_script = &apos;&apos;&apos;
def repo = &quot;aptly publish list --raw&quot;.execute() |  [&apos;awk&apos;, &apos;{ print $2 }&apos;].execute() | &quot;grep -e stable -e updates&quot;.execute()
println repo.text
&apos;&apos;&apos;.trim()

String result
Jenkins.instance.slaves.find { agent -&gt;
    agent.name == agent_name
}.with { agent -&gt;
    result = RemotingDiagnostics.executeGroovy(groovy_script, agent.channel).replaceAll(&quot;_main&quot;, &quot;&quot;)
}
return result.tokenize()</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1131.v8b_b_5eda_c328e">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>5_copy_to_public_repo</projectName>
          <projectFullName>5_copy_to_public_repo</projectFullName>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>false</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.ChoiceParameter>
        <hudson.model.StringParameterDefinition>
          <name>PREFIX</name>
          <description>distribution이 위치할 경로 (ex. tmax)
-&gt; tmax로 설정할 경우 http://tos-repo.tmaxos.com/tmax에 위치
-&gt; debian으로 설정할 경우 http://tos-repo.tmaxos.com/debian에 위치</description>
          <defaultValue>tmax</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.parameterizedscheduler.ParameterizedTimerTrigger plugin="parameterized-scheduler@1.0">
      <spec></spec>
      <parameterizedSpecification>TZ=Asia/Seoul
H 12 * * 1-5 % DISTRIBUTION=tmaxgooroom-3.0-updates; PREFIX=tmax</parameterizedSpecification>
    </org.jenkinsci.plugins.parameterizedscheduler.ParameterizedTimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -x

case ${DISTRIBUTION} in
  &quot;tmaxgooroom-3.0-stable&quot;)
    echo -e &quot;Do not copy except for point release!&quot;
    #sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/pool aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}
    #sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/dists/${DISTRIBUTION} aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}/dists
    ;;  
  &quot;tmaxgooroom-3.0-updates&quot;)
    sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/pool aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}
    sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/dists/${DISTRIBUTION} aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}/dists
    ;;
  &quot;tmaxgooroom-tmax-stable&quot;)
    sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/pool aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}
    sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/dists/${DISTRIBUTION} aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}/dists
    ;;
  &quot;tmaxgooroom-gs-unstable&quot; | &quot;tmaxgooroom-gs-stable&quot;)
    sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/pool aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}
    sshpass -p &quot;TmaxAptly2019041@&quot; scp -r /var/spool/aptly/public/${PREFIX}/dists/${DISTRIBUTION} aptly@220.90.208.126:/var/spool/aptly/public/${PREFIX}/dists
    ;;  
esac</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@1.0.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>